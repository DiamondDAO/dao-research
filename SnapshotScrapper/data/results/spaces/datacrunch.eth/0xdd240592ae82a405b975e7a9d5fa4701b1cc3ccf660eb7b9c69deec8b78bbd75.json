{"id": "0xdd240592ae82a405b975e7a9d5fa4701b1cc3ccf660eb7b9c69deec8b78bbd75", "title": "[Ranking] Rounds Equal Weightage", "body": "# Abstract\nAs proposed by @crazy-nikolay, @srk and felt by many including the team: the current ranking needs to evolve. Currently, some datasets have more impact than others, and not participating in a round will rank someone higher than some negatively correlated models. It's not in the spirit of the community where weekly commitment is required to perform on the leaderboards.\n\nThe score of each round is scaled between 0 and 1\nMinimum score is given to people who didn't participate in a round\nMean correlation score becomes a mean of the scaled correlation scores\n\n# Code\n[Here](https://discord.com/channels/770586873260933120/770586873260933124/905097810502910033) is a link to @srk's notebook backing his proposal.\n\n```\nfrom sklearn import preprocessing\n\ncols_to_mean = []\nfor col in [\"dolly\", \"e-kinetic\", \"c-mechanics\", \"Gordon_Geeko\", \"3B1-signal\"]:\n    new_col = f\"{col.replace('-','_')}_scaled\"\n    scaler = preprocessing.MinMaxScaler()\n    # Scale each round scores between 0 and 1\n    df[new_col] = scaler.fit_transform(df[col].values.reshape(-1,1))\n    # Fill the minimum value for the people who did not participate in the round\n    df[new_col] = df[new_col].fillna(0)\n    cols_to_mean.append(new_col)\n    \ndf[\"new_mean\"] = df[cols_to_mean].mean(axis=1)\ndf[\"new_position\"] = df[\"new_mean\"].rank(ascending=False).astype(int)\ndf.head()\n```\n\nForum Thread [here](https://tournament.datacrunch.com/forum/topic/-rankin)", "choices": ["For", "Against", "Abstain"], "start": 1638529200, "end": 1638741600, "type": "basic", "scores": [2440.614609942575, 0, 1], "scores_total": 2441.614609942575, "scores_state": "final", "scores_updated": 1638741614, "snapshot": "13734565", "state": "closed", "author": "0x134B87926b8B2771Bf75a38dAF76E4D7985C8489", "space": {"id": "datacrunch.eth", "name": "DataCrunch DAO"}, "votes": 10, "votes_data": [{"id": "QmTHtGNFcyYQbWM8YUGCtNBfrA97zsmdadsTweCQe86iPB", "voter": "0xf5E953D843B2292fD03ECcC060E1Cae7D5802a7C", "created": 1638684285, "choice": 1, "space": {"id": "datacrunch.eth"}}, {"id": "0x11b7ae73f18e427fe93aa4caa73e3940f061558efe33db39d6e9903caf0208e5", "voter": "0x5F9BF21F99E38EeE83149C7b9cc33a564bf9bFB9", "created": 1638681382, "choice": 1, "space": {"id": "datacrunch.eth"}}, {"id": "0xc1e30fb1c6af407d58cdb618abd5a184ac9ba1ac8e7131104745c56ba3b423c3", "voter": "0x035aDaA393362f107bB730904D74Bd2325924F8C", "created": 1638658853, "choice": 1, "space": {"id": "datacrunch.eth"}}, {"id": "0x66959417c7e16a65e0279cc35c2493bba7f24b870b3946dc3475479cd22aa9df", "voter": "0x833a25686237D2b33F06c7f7423E3c3FD0a4Eb32", "created": 1638650228, "choice": 3, "space": {"id": "datacrunch.eth"}}, {"id": "0x94996bf13e4d6202be1bef16e4597b683b5a4a8dc1ec92682949b775b8dfb091", "voter": "0x7113B8d97554EaeFF64bEEa3F91131afF9f4D3e0", "created": 1638636065, "choice": 1, "space": {"id": "datacrunch.eth"}}, {"id": "0x8eed8a22494cd232d7e50af51b508eb50dda6f4a80d9fca442b2434be724b13b", "voter": "0x430a4A88cb3417d4C8E8e6D58880A2fd7aCa9EE3", "created": 1638623352, "choice": 1, "space": {"id": "datacrunch.eth"}}, {"id": "0x7922509bd8cec2217f339458fbfe2b0b6a5597304e4d33be70404162002201b3", "voter": "0xad3AB30Bf7E7423FA8266C7300F2DCd07377dc7E", "created": 1638590228, "choice": 1, "space": {"id": "datacrunch.eth"}}, {"id": "0x85f3da7f955909f35f540f258b4c5c7bde01d8e6f0a048a410ba26db3f64bdcf", "voter": "0x0E188ea7A83404751E1251934056F46Bc1b5Ed8E", "created": 1638575910, "choice": 1, "space": {"id": "datacrunch.eth"}}, {"id": "0x613966d22f13e14cbfa94505ffbeffbd0ae7148fe93b23fda35a32800978e81e", "voter": "0x2C12C8BC56e67b0B5218E384Fa0BA3Bc0A655096", "created": 1638566481, "choice": 1, "space": {"id": "datacrunch.eth"}}, {"id": "QmdHWbJtZsUpwoVLmfLxWkvfhyNBkaUWCDmoWDMqMPunJj", "voter": "0x6711a4B7Ac1c5537391e7997234a7570D95e02B7", "created": 1638552997, "choice": 1, "space": {"id": "datacrunch.eth"}}]}