{"id": "Qma8hiZZrH8Y5CMVsMwMPXt9anQJxdtpPJTDeXUJfnduMn", "title": "GGP 0005: Batch GNS transactions", "body": "GGP: 0005\nScope: Smart Contracts\nCreated: 2021-09-07\nGIPs-Repo-Latest-Commit: 329e92fb3c897f68bddbd93abf12278167116266\n \n## GIPs\nGIP: 0014\n   Title: Batch GNS transactions\n   Authors: Ariel Barmat <ariel@edgeandnode.com>\n   Created: 2021-09-07\n   Stage: Candidate\n   Discussions-To: https://forum.thegraph.com/t/batch-gns-transactions/2285\n \n## Motivation\nOne of the issues brought by the community is that sometimes a subgraph publisher would want to publish a new subgraph and deposit the initial tokens. Today, that\u2019s only possible by using a Multisig or any other contract to batch those transactions.\n \nThis proposal allows batching transactions on the GNS, based on the Multicall pattern seen in Uniswap (https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/base/Multicall.sol) and recently implemented in OpenZeppelin (https://docs.openzeppelin.com/contracts/4.x/api/utils#Multicall)\n \n## Implementation\nA new contract called MultiCall is introduced, inspired by the one used by Uniswap. The payable keyword was removed from the multicall() as the protocol does not deal with ETH. Additionally, it is insecure in some instances if the contract relies on msg.value.\n \nThe GNS inherits from MultiCall that expose a public multicall(bytes[] calldata data) function that receives an array of payloads to send to the contract itself. This allows to batch ANY publicly callable contract function.\nClient-side one can build such payloads like:\n \n// Build payloads\nconst tx1 = await gns.populateTransaction.publishNewSubgraph(\n    <subgraphAccount>,\n    <subgraphDeploymentID>,\n    <versionMetadata>,\n    <subgraphMetadata>,\n)\nconst tx2 = await gns.populateTransaction.mintNSignal(\n    <subgraphAccount>,\n    <subgraphNumber>,\n    <amount>,\n    <signalOut>,\n)\n \n// Send batch\nawait gns.multicall([tx1.data, tx2.data])\n \n \n \n## References\nImplementation: https://etherscan.io/address/0x8F0031C8A936e3f78Db1E0670135CCad27E5b689#code\nAudit: https://github.com/graphprotocol/contracts/blob/40a2a721e1b8441a76a8f7105ffd9577cd163fc6/audits/OpenZeppelin/the-graph-gns-audit-2021-08.pdf\n \n \n \n---\n \n# Graph Governance Proposal-0005\n \n## Batch GNS transactions\n \nThis proposal is to upgrade The Graph's protocol smart contracts running on Ethereum mainnet with the changes described in Graph Improvement Proposal (GIP) 0014, including the motivation and scope of the changes described in this proposal.\n \nThe code deployed that implements GIP-0014 must correspond to the commit hash included in the front matter of this governance proposal.\n \nFollowing a successful \"yes\" vote, the protocol upgrade should be carried out at the earliest convenience using The Graph Council's Gnosis Multisig.\n\n", "choices": ["Yes", "No"], "start": 1631098800, "end": 1631703600, "snapshot": "13184611", "state": "closed", "author": "0x4530aFEaDe76579f4D4E6fF9e079520B7e7ebA9A", "space": {"id": "council.graphprotocol.eth", "name": "The Graph Council"}, "votes": 6, "votes_data": [{"id": "QmbyTyShXWXPUj3raUG9ikxbyXiFAnSsP1uc1R468cVpjf", "voter": "0xFe46c8B3a09993D35702a0790B00cAA2bb474dc2", "created": 1631617484, "choice": 1, "space": {"id": "council.graphprotocol.eth"}}, {"id": "QmYNS6V7DLfU62g95xXVm9RQxoWkB3owZbb6gcRBYq1jrg", "voter": "0xE0FADeFDb233C32C67a1e428951aEfE8dF6ce639", "created": 1631542534, "choice": 1, "space": {"id": "council.graphprotocol.eth"}}, {"id": "QmfJVZBF1YEGqDdgMMvyqH77emDvYqDDcZEh6CbKaSgmX3", "voter": "0x38FA68D1C06BD272893908a74E6BcC67E28d4Da8", "created": 1631238775, "choice": 1, "space": {"id": "council.graphprotocol.eth"}}, {"id": "QmUHXSgmWUWUsf28STUz9bjsfpeaXb4cUxv36MwA1NFTzL", "voter": "0x4530aFEaDe76579f4D4E6fF9e079520B7e7ebA9A", "created": 1631221335, "choice": 1, "space": {"id": "council.graphprotocol.eth"}}, {"id": "QmPEdREFR4tgqZ3zQnNJ7JDbUnx3vjgo8xmvX9hDeB6jUF", "voter": "0xd201C95461F69A031Cdc317f453ff190890722aA", "created": 1631206234, "choice": 1, "space": {"id": "council.graphprotocol.eth"}}, {"id": "QmPiXr88vGkojScKVEBy6Kz55RMGthqC91bAetFPLS2nQq", "voter": "0x7EbE5983FDA73749f94E39A215Cc80263A280385", "created": 1631184675, "choice": 1, "space": {"id": "council.graphprotocol.eth"}}]}